@page "/tools/PassGenerator"
@using Business.Models.Tools

@inject Business.Services.Tools.PassGenerator _passGenerator

<LayoutSetter>
    <PageHeader>
    </PageHeader>
    <Footer>
    </Footer>
</LayoutSetter>


<div class="row">
    <div class="col-md-12">
        <div class="panel panel-filled panel-c-accent" id="pnlPass">
            <div class="loader">
                <div class="loader-bar"></div>
            </div>

            <div class="panel-body">
                <div class="row">
                    <div class="form-group">
                        <div class="col-lg-3 col-xs-12">
                            <label for="Len">Password Length</label>
                            <input type="tel" @bind="_model.Len" class="form-control col-md-2" id="Len" name="Len" placeholder="Pass Length" min="6" max="2048" />
                            <span id="strongstatus">Strong</span>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="checkbox checkbox-warning">
                        <input type="checkbox" @bind="_model.Numberic" id="Numberic" />
                        <label for="Numberic">Include Numbers (1234567890)</label>
                    </div>
                    <div class="checkbox checkbox-warning">
                        <input type="checkbox" @bind="_model.SpecialChar" id="SpecialChar" />
                        <label for="SpecialChar">Include Symbols (*$-+?_&=!%{}/)</label>
                    </div>
                    <div class="checkbox checkbox-warning">
                        <input type="checkbox" @bind="_model.UpperCase" id="UpperCase" />
                        <label for="UpperCase">Include Uppercase Characters (A-Z)</label>
                    </div>
                    <div class="checkbox checkbox-warning">
                        <input type="checkbox" @bind="_model.LowerCase" id="LowerCase"/>
                        <label for="UpperCase">Include Lowercase Characters (a-z)</label>
                    </div>
                </div>

                <div class="form-group ">
                    <div class="checkbox checkbox-warning">
                        <input type="checkbox" @bind="_model.CustomChar" id="CustomChar" />
                        <label for="CustomChar">Custom Characters</label>
                    </div>
                    <input type="text" @bind="_model.Custom" class="form-control" disabled="@(!_model.CustomChar)" placeholder="Abcdefg;#'9876543210" />
                </div>

                <div class="form-group ">
                    <div class="checkbox checkbox-warning">
                        <input type="checkbox" @bind="_hasPrefix" id="chkPrefix" />
                        <label for="chkPrefix">Prefix</label>
                    </div>
                    <input type="text" @bind="_model.Prefix" class="form-control" disabled="@(!_hasPrefix)" />

                    <div class="checkbox checkbox-warning">
                        <input type="checkbox" @bind="_hasSuffix" id="chkSuffix" />
                        <label for="chkSuffix">Suffix</label>
                    </div>
                    <input type="text" @bind="_model.Suffix" class="form-control" disabled="@(!_hasSuffix)"  />
                </div>
                <div class="form-group">
                    <input type="button" class="btn btn-w-sm btn-accent" @onclick="Submit" value="Generate Password">
                </div>
                <br />

                <div class="form-group" id="divPass">
                    <label for="generatedPass">Generated Password</label> <i class="fa fa-clone c-accent copy-to-clipboard" data-toggle="tooltip" data-obj="generatedPass" title="Copy to clipboard"></i> <br />
                    <div class="col-md-12">
                        <textarea class="c-accent" id="generatedPass" readonly>@_generatedPass</textarea>
                    </div>
                </div>

            </div>
        </div>
    </div>

</div>
@code {
    [CascadingParameter]
    public MainLayout Layout { get; set; }

    readonly PassGeneratorModel _model = new()
        {
            Len = 16,
            Numberic = true,
            SpecialChar = true,
            UpperCase = true,
            LowerCase = true
        };
    string _generatedPass;
    bool _hasPrefix;
    bool _hasSuffix;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        SetTitles();
        await Submit();
    }

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        return !firstRender
            ? Task.CompletedTask
            : Layout.Init();
    }

    private void SetTitles()
    {
        Layout.Title = "Password Generator";
        Layout.Description = "Online password generator help to create strong password. A strong password is key for protecting your personal info and assets online.";

        Layout.PageLogo = @<i class="fa page-header-icon fa-key"></i>;
        Layout.PageTitle = @<text>Password Generator</text>;
        Layout.PageDescription = @<text>Online password generator help to create strong password. A strong password is key for protecting your personal info and assets online. Using a different password for every website that is long and has multiple types of characters (numbers, letters, and symbols) will help protect you from someone hacking into your accounts</text>;
    }

    private Task Submit()
    {
        if (!_hasPrefix)
        {
            _model.Prefix = string.Empty;
        }
        if (!_hasSuffix)
        {
            _model.Suffix = string.Empty;
        }

        _generatedPass = _passGenerator.Generate(_model);
        return Task.CompletedTask;
    }
}
